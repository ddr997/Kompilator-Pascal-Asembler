Grammar

    0 $accept: start $end

    1 start: program

    2 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations compound_statement

    3 program_identifier_list: ID
    4                        | program_identifier_list ',' ID

    5 identifier_list: ID
    6                | identifier_list ',' ID

    7 declarations: declarations T_VAR identifier_list ':' type ';'
    8             | %empty

    9 type: standard_type

   10 standard_type: T_INTEGER
   11              | T_REAL

   12 compound_statement: T_BEGIN statement_list T_END '.'

   13 statement_list: statement
   14               | statement_list ';' statement

   15 statement: ID T_ASSIGN expression
   16          | T_WRITE '(' ID ')'

   17 expression: expression '+' expression
   18           | expression '-' expression
   19           | expression T_MULOP expression
   20           | '-' expression
   21           | '(' expression ')'
   22           | ID
   23           | NUM


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 16 21
    ')' (41) 2 16 21
    '+' (43) 17
    ',' (44) 4 6
    '-' (45) 18 20
    '.' (46) 12
    ':' (58) 7
    ';' (59) 2 7 14
    error (256)
    T_PROGRAM (258) 2
    T_VAR (259) 7
    T_BEGIN (260) 12
    T_END (261) 12
    T_WRITE (262) 16
    T_ASSIGN (263) 15
    T_INTEGER (264) 10
    T_REAL (265) 11
    T_MULOP (266) 19
    ID (267) 2 3 4 5 6 15 16 22
    NUM (268) 23


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    start (23)
        on left: 1
        on right: 0
    program (24)
        on left: 2
        on right: 1
    program_identifier_list (25)
        on left: 3 4
        on right: 2 4
    identifier_list (26)
        on left: 5 6
        on right: 6 7
    declarations (27)
        on left: 7 8
        on right: 2 7
    type (28)
        on left: 9
        on right: 7
    standard_type (29)
        on left: 10 11
        on right: 9
    compound_statement (30)
        on left: 12
        on right: 2
    statement_list (31)
        on left: 13 14
        on right: 12 14
    statement (32)
        on left: 15 16
        on right: 13 14
    expression (33)
        on left: 17 18 19 20 21 22 23
        on right: 15 17 18 19 20 21


State 0

    0 $accept: . start $end

    T_PROGRAM  shift, and go to state 1

    start    go to state 2
    program  go to state 3


State 1

    2 program: T_PROGRAM . ID '(' program_identifier_list ')' ';' declarations compound_statement

    ID  shift, and go to state 4


State 2

    0 $accept: start . $end

    $end  shift, and go to state 5


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    2 program: T_PROGRAM ID . '(' program_identifier_list ')' ';' declarations compound_statement

    '('  shift, and go to state 6


State 5

    0 $accept: start $end .

    $default  accept


State 6

    2 program: T_PROGRAM ID '(' . program_identifier_list ')' ';' declarations compound_statement

    ID  shift, and go to state 7

    program_identifier_list  go to state 8


State 7

    3 program_identifier_list: ID .

    $default  reduce using rule 3 (program_identifier_list)


State 8

    2 program: T_PROGRAM ID '(' program_identifier_list . ')' ';' declarations compound_statement
    4 program_identifier_list: program_identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    2 program: T_PROGRAM ID '(' program_identifier_list ')' . ';' declarations compound_statement

    ';'  shift, and go to state 11


State 10

    4 program_identifier_list: program_identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    2 program: T_PROGRAM ID '(' program_identifier_list ')' ';' . declarations compound_statement

    $default  reduce using rule 8 (declarations)

    declarations  go to state 13


State 12

    4 program_identifier_list: program_identifier_list ',' ID .

    $default  reduce using rule 4 (program_identifier_list)


State 13

    2 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations . compound_statement
    7 declarations: declarations . T_VAR identifier_list ':' type ';'

    T_VAR    shift, and go to state 14
    T_BEGIN  shift, and go to state 15

    compound_statement  go to state 16


State 14

    7 declarations: declarations T_VAR . identifier_list ':' type ';'

    ID  shift, and go to state 17

    identifier_list  go to state 18


State 15

   12 compound_statement: T_BEGIN . statement_list T_END '.'

    T_WRITE  shift, and go to state 19
    ID       shift, and go to state 20

    statement_list  go to state 21
    statement       go to state 22


State 16

    2 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations compound_statement .

    $default  reduce using rule 2 (program)


State 17

    5 identifier_list: ID .

    $default  reduce using rule 5 (identifier_list)


State 18

    6 identifier_list: identifier_list . ',' ID
    7 declarations: declarations T_VAR identifier_list . ':' type ';'

    ','  shift, and go to state 23
    ':'  shift, and go to state 24


State 19

   16 statement: T_WRITE . '(' ID ')'

    '('  shift, and go to state 25


State 20

   15 statement: ID . T_ASSIGN expression

    T_ASSIGN  shift, and go to state 26


State 21

   12 compound_statement: T_BEGIN statement_list . T_END '.'
   14 statement_list: statement_list . ';' statement

    T_END  shift, and go to state 27
    ';'    shift, and go to state 28


State 22

   13 statement_list: statement .

    $default  reduce using rule 13 (statement_list)


State 23

    6 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 29


State 24

    7 declarations: declarations T_VAR identifier_list ':' . type ';'

    T_INTEGER  shift, and go to state 30
    T_REAL     shift, and go to state 31

    type           go to state 32
    standard_type  go to state 33


State 25

   16 statement: T_WRITE '(' . ID ')'

    ID  shift, and go to state 34


State 26

   15 statement: ID T_ASSIGN . expression

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 39


State 27

   12 compound_statement: T_BEGIN statement_list T_END . '.'

    '.'  shift, and go to state 40


State 28

   14 statement_list: statement_list ';' . statement

    T_WRITE  shift, and go to state 19
    ID       shift, and go to state 20

    statement  go to state 41


State 29

    6 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 6 (identifier_list)


State 30

   10 standard_type: T_INTEGER .

    $default  reduce using rule 10 (standard_type)


State 31

   11 standard_type: T_REAL .

    $default  reduce using rule 11 (standard_type)


State 32

    7 declarations: declarations T_VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 42


State 33

    9 type: standard_type .

    $default  reduce using rule 9 (type)


State 34

   16 statement: T_WRITE '(' ID . ')'

    ')'  shift, and go to state 43


State 35

   22 expression: ID .

    $default  reduce using rule 22 (expression)


State 36

   23 expression: NUM .

    $default  reduce using rule 23 (expression)


State 37

   20 expression: '-' . expression

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 44


State 38

   21 expression: '(' . expression ')'

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 45


State 39

   15 statement: ID T_ASSIGN expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 46
    '+'      shift, and go to state 47
    '-'      shift, and go to state 48

    $default  reduce using rule 15 (statement)


State 40

   12 compound_statement: T_BEGIN statement_list T_END '.' .

    $default  reduce using rule 12 (compound_statement)


State 41

   14 statement_list: statement_list ';' statement .

    $default  reduce using rule 14 (statement_list)


State 42

    7 declarations: declarations T_VAR identifier_list ':' type ';' .

    $default  reduce using rule 7 (declarations)


State 43

   16 statement: T_WRITE '(' ID ')' .

    $default  reduce using rule 16 (statement)


State 44

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . T_MULOP expression
   20           | '-' expression .

    T_MULOP  shift, and go to state 46

    $default  reduce using rule 20 (expression)


State 45

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . T_MULOP expression
   21           | '(' expression . ')'

    T_MULOP  shift, and go to state 46
    '+'      shift, and go to state 47
    '-'      shift, and go to state 48
    ')'      shift, and go to state 49


State 46

   19 expression: expression T_MULOP . expression

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 50


State 47

   17 expression: expression '+' . expression

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 51


State 48

   18 expression: expression '-' . expression

    ID   shift, and go to state 35
    NUM  shift, and go to state 36
    '-'  shift, and go to state 37
    '('  shift, and go to state 38

    expression  go to state 52


State 49

   21 expression: '(' expression ')' .

    $default  reduce using rule 21 (expression)


State 50

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . T_MULOP expression
   19           | expression T_MULOP expression .

    $default  reduce using rule 19 (expression)


State 51

   17 expression: expression . '+' expression
   17           | expression '+' expression .
   18           | expression . '-' expression
   19           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 46

    $default  reduce using rule 17 (expression)


State 52

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   18           | expression '-' expression .
   19           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 46

    $default  reduce using rule 18 (expression)
