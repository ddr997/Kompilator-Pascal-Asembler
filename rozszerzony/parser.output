Grammar

    0 $accept: start $end

    1 start: program

    2 $@1: %empty

    3 $@2: %empty

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    5 program_identifier_list: ID
    6                        | program_identifier_list ',' ID

    7 identifier_list: ID
    8                | identifier_list ',' ID

    9 declarations: declarations T_VAR identifier_list ':' type ';'
   10             | %empty

   11 type: standard_type

   12 standard_type: T_INTEGER
   13              | T_REAL

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   15                        | %empty

   16 $@3: %empty

   17 subprogram_declaration: subprogram_head declarations $@3 compound_statement

   18 subprogram_head: T_PROCEDURE ID arguments ';'

   19 arguments: '(' parameter_list ')'
   20          | %empty

   21 parameter_list: identifier_list ':' type
   22               | parameter_list ';' identifier_list ':' type

   23 compound_statement: T_BEGIN optional_statements T_END

   24 optional_statements: statement_list
   25                    | %empty

   26 statement_list: statement
   27               | statement_list ';' statement

   28 statement: ID T_ASSIGN expression
   29          | T_WRITE '(' ID ')'
   30          | procedure_statement

   31 procedure_statement: ID
   32                    | ID '(' expression_list ')'

   33 expression_list: expression
   34                | expression_list ',' expression

   35 expression: expression '+' expression
   36           | expression '-' expression
   37           | expression T_MULOP expression
   38           | '-' expression
   39           | '(' expression ')'
   40           | ID
   41           | NUM


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 19 29 32 39
    ')' (41) 4 19 29 32 39
    '+' (43) 35
    ',' (44) 6 8 34
    '-' (45) 36 38
    '.' (46) 4
    ':' (58) 9 21 22
    ';' (59) 4 9 14 18 22 27
    error (256)
    T_PROGRAM (258) 4
    T_VAR (259) 9
    T_BEGIN (260) 23
    T_END (261) 23
    T_WRITE (262) 29
    T_ASSIGN (263) 28
    T_PROCEDURE (264) 18
    T_INTEGER <variable_type> (265) 12
    T_REAL <variable_type> (266) 13
    T_MULOP <operation> (267) 37
    ID <index> (268) 4 5 6 7 8 18 28 29 31 32 40
    NUM <index> (269) 41


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    standard_type <variable_type> (24)
        on left: 12 13
        on right: 11
    type <variable_type> (25)
        on left: 11
        on right: 9 21 22
    identifier_list <index> (26)
        on left: 7 8
        on right: 8 9 21 22
    statement <index> (27)
        on left: 28 29 30
        on right: 26 27
    expression <index> (28)
        on left: 35 36 37 38 39 40 41
        on right: 28 33 34 35 36 37 38 39
    start (29)
        on left: 1
        on right: 0
    program (30)
        on left: 4
        on right: 1
    $@1 (31)
        on left: 2
        on right: 4
    $@2 (32)
        on left: 3
        on right: 4
    program_identifier_list (33)
        on left: 5 6
        on right: 4 6
    declarations (34)
        on left: 9 10
        on right: 4 9 17
    subprogram_declarations (35)
        on left: 14 15
        on right: 4 14
    subprogram_declaration (36)
        on left: 17
        on right: 14
    $@3 (37)
        on left: 16
        on right: 17
    subprogram_head (38)
        on left: 18
        on right: 17
    arguments (39)
        on left: 19 20
        on right: 18
    parameter_list (40)
        on left: 21 22
        on right: 19 22
    compound_statement (41)
        on left: 23
        on right: 4 17
    optional_statements (42)
        on left: 24 25
        on right: 23
    statement_list (43)
        on left: 26 27
        on right: 24 27
    procedure_statement (44)
        on left: 31 32
        on right: 30
    expression_list (45)
        on left: 33 34
        on right: 32 34


State 0

    0 $accept: . start $end

    T_PROGRAM  shift, and go to state 1

    start    go to state 2
    program  go to state 3


State 1

    4 program: T_PROGRAM . ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 4


State 2

    0 $accept: start . $end

    $end  shift, and go to state 5


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    4 program: T_PROGRAM ID . '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    '('  shift, and go to state 6


State 5

    0 $accept: start $end .

    $default  accept


State 6

    4 program: T_PROGRAM ID '(' . program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 7

    program_identifier_list  go to state 8


State 7

    5 program_identifier_list: ID .

    $default  reduce using rule 5 (program_identifier_list)


State 8

    4 program: T_PROGRAM ID '(' program_identifier_list . ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'
    6 program_identifier_list: program_identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    4 program: T_PROGRAM ID '(' program_identifier_list ')' . ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ';'  shift, and go to state 11


State 10

    6 program_identifier_list: program_identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' . declarations $@1 subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 10 (declarations)

    declarations  go to state 13


State 12

    6 program_identifier_list: program_identifier_list ',' ID .

    $default  reduce using rule 6 (program_identifier_list)


State 13

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations . $@1 subprogram_declarations $@2 compound_statement '.'
    9 declarations: declarations . T_VAR identifier_list ':' type ';'

    T_VAR  shift, and go to state 14

    $default  reduce using rule 2 ($@1)

    $@1  go to state 15


State 14

    9 declarations: declarations T_VAR . identifier_list ':' type ';'

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 15

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 . subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 18


State 16

    7 identifier_list: ID .

    $default  reduce using rule 7 (identifier_list)


State 17

    8 identifier_list: identifier_list . ',' ID
    9 declarations: declarations T_VAR identifier_list . ':' type ';'

    ','  shift, and go to state 19
    ':'  shift, and go to state 20


State 18

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations . $@2 compound_statement '.'
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    T_PROCEDURE  shift, and go to state 21

    $default  reduce using rule 3 ($@2)

    $@2                     go to state 22
    subprogram_declaration  go to state 23
    subprogram_head         go to state 24


State 19

    8 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 25


State 20

    9 declarations: declarations T_VAR identifier_list ':' . type ';'

    T_INTEGER  shift, and go to state 26
    T_REAL     shift, and go to state 27

    standard_type  go to state 28
    type           go to state 29


State 21

   18 subprogram_head: T_PROCEDURE . ID arguments ';'

    ID  shift, and go to state 30


State 22

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 . compound_statement '.'

    T_BEGIN  shift, and go to state 31

    compound_statement  go to state 32


State 23

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 33


State 24

   17 subprogram_declaration: subprogram_head . declarations $@3 compound_statement

    $default  reduce using rule 10 (declarations)

    declarations  go to state 34


State 25

    8 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 8 (identifier_list)


State 26

   12 standard_type: T_INTEGER .

    $default  reduce using rule 12 (standard_type)


State 27

   13 standard_type: T_REAL .

    $default  reduce using rule 13 (standard_type)


State 28

   11 type: standard_type .

    $default  reduce using rule 11 (type)


State 29

    9 declarations: declarations T_VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 35


State 30

   18 subprogram_head: T_PROCEDURE ID . arguments ';'

    '('  shift, and go to state 36

    $default  reduce using rule 20 (arguments)

    arguments  go to state 37


State 31

   23 compound_statement: T_BEGIN . optional_statements T_END

    T_WRITE  shift, and go to state 38
    ID       shift, and go to state 39

    $default  reduce using rule 25 (optional_statements)

    statement            go to state 40
    optional_statements  go to state 41
    statement_list       go to state 42
    procedure_statement  go to state 43


State 32

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement . '.'

    '.'  shift, and go to state 44


State 33

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 14 (subprogram_declarations)


State 34

    9 declarations: declarations . T_VAR identifier_list ':' type ';'
   17 subprogram_declaration: subprogram_head declarations . $@3 compound_statement

    T_VAR  shift, and go to state 14

    $default  reduce using rule 16 ($@3)

    $@3  go to state 45


State 35

    9 declarations: declarations T_VAR identifier_list ':' type ';' .

    $default  reduce using rule 9 (declarations)


State 36

   19 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 16

    identifier_list  go to state 46
    parameter_list   go to state 47


State 37

   18 subprogram_head: T_PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 48


State 38

   29 statement: T_WRITE . '(' ID ')'

    '('  shift, and go to state 49


State 39

   28 statement: ID . T_ASSIGN expression
   31 procedure_statement: ID .
   32                    | ID . '(' expression_list ')'

    T_ASSIGN  shift, and go to state 50
    '('       shift, and go to state 51

    $default  reduce using rule 31 (procedure_statement)


State 40

   26 statement_list: statement .

    $default  reduce using rule 26 (statement_list)


State 41

   23 compound_statement: T_BEGIN optional_statements . T_END

    T_END  shift, and go to state 52


State 42

   24 optional_statements: statement_list .
   27 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 53

    $default  reduce using rule 24 (optional_statements)


State 43

   30 statement: procedure_statement .

    $default  reduce using rule 30 (statement)


State 44

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.' .

    $default  reduce using rule 4 (program)


State 45

   17 subprogram_declaration: subprogram_head declarations $@3 . compound_statement

    T_BEGIN  shift, and go to state 31

    compound_statement  go to state 54


State 46

    8 identifier_list: identifier_list . ',' ID
   21 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 55


State 47

   19 arguments: '(' parameter_list . ')'
   22 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 56
    ';'  shift, and go to state 57


State 48

   18 subprogram_head: T_PROCEDURE ID arguments ';' .

    $default  reduce using rule 18 (subprogram_head)


State 49

   29 statement: T_WRITE '(' . ID ')'

    ID  shift, and go to state 58


State 50

   28 statement: ID T_ASSIGN . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 63


State 51

   32 procedure_statement: ID '(' . expression_list ')'

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression       go to state 64
    expression_list  go to state 65


State 52

   23 compound_statement: T_BEGIN optional_statements T_END .

    $default  reduce using rule 23 (compound_statement)


State 53

   27 statement_list: statement_list ';' . statement

    T_WRITE  shift, and go to state 38
    ID       shift, and go to state 39

    statement            go to state 66
    procedure_statement  go to state 43


State 54

   17 subprogram_declaration: subprogram_head declarations $@3 compound_statement .

    $default  reduce using rule 17 (subprogram_declaration)


State 55

   21 parameter_list: identifier_list ':' . type

    T_INTEGER  shift, and go to state 26
    T_REAL     shift, and go to state 27

    standard_type  go to state 28
    type           go to state 67


State 56

   19 arguments: '(' parameter_list ')' .

    $default  reduce using rule 19 (arguments)


State 57

   22 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 16

    identifier_list  go to state 68


State 58

   29 statement: T_WRITE '(' ID . ')'

    ')'  shift, and go to state 69


State 59

   40 expression: ID .

    $default  reduce using rule 40 (expression)


State 60

   41 expression: NUM .

    $default  reduce using rule 41 (expression)


State 61

   38 expression: '-' . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 70


State 62

   39 expression: '(' . expression ')'

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 71


State 63

   28 statement: ID T_ASSIGN expression .
   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 72
    '+'      shift, and go to state 73
    '-'      shift, and go to state 74

    $default  reduce using rule 28 (statement)


State 64

   33 expression_list: expression .
   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 72
    '+'      shift, and go to state 73
    '-'      shift, and go to state 74

    $default  reduce using rule 33 (expression_list)


State 65

   32 procedure_statement: ID '(' expression_list . ')'
   34 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 75
    ','  shift, and go to state 76


State 66

   27 statement_list: statement_list ';' statement .

    $default  reduce using rule 27 (statement_list)


State 67

   21 parameter_list: identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 68

    8 identifier_list: identifier_list . ',' ID
   22 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 77


State 69

   29 statement: T_WRITE '(' ID ')' .

    $default  reduce using rule 29 (statement)


State 70

   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression
   38           | '-' expression .

    T_MULOP  shift, and go to state 72

    $default  reduce using rule 38 (expression)


State 71

   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression
   39           | '(' expression . ')'

    T_MULOP  shift, and go to state 72
    '+'      shift, and go to state 73
    '-'      shift, and go to state 74
    ')'      shift, and go to state 78


State 72

   37 expression: expression T_MULOP . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 79


State 73

   35 expression: expression '+' . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 80


State 74

   36 expression: expression '-' . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 81


State 75

   32 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 32 (procedure_statement)


State 76

   34 expression_list: expression_list ',' . expression

    ID   shift, and go to state 59
    NUM  shift, and go to state 60
    '-'  shift, and go to state 61
    '('  shift, and go to state 62

    expression  go to state 82


State 77

   22 parameter_list: parameter_list ';' identifier_list ':' . type

    T_INTEGER  shift, and go to state 26
    T_REAL     shift, and go to state 27

    standard_type  go to state 28
    type           go to state 83


State 78

   39 expression: '(' expression ')' .

    $default  reduce using rule 39 (expression)


State 79

   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression
   37           | expression T_MULOP expression .

    $default  reduce using rule 37 (expression)


State 80

   35 expression: expression . '+' expression
   35           | expression '+' expression .
   36           | expression . '-' expression
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 72

    $default  reduce using rule 35 (expression)


State 81

   35 expression: expression . '+' expression
   36           | expression . '-' expression
   36           | expression '-' expression .
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 72

    $default  reduce using rule 36 (expression)


State 82

   34 expression_list: expression_list ',' expression .
   35 expression: expression . '+' expression
   36           | expression . '-' expression
   37           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 72
    '+'      shift, and go to state 73
    '-'      shift, and go to state 74

    $default  reduce using rule 34 (expression_list)


State 83

   22 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 22 (parameter_list)
