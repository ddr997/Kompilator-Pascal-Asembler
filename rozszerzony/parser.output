Grammar

    0 $accept: start $end

    1 start: program

    2 $@1: %empty

    3 $@2: %empty

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    5 program_identifier_list: ID
    6                        | program_identifier_list ',' ID

    7 identifier_list: ID
    8                | identifier_list ',' ID

    9 declarations: declarations T_VAR identifier_list ':' type ';'
   10             | %empty

   11 type: standard_type

   12 standard_type: T_INTEGER
   13              | T_REAL

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   15                        | %empty

   16 subprogram_declaration: subprogram_head declarations compound_statement

   17 subprogram_head: T_PROCEDURE ID arguments ';'
   18                | T_FUNCTION ID arguments ':' standard_type ';'

   19 arguments: '(' parameter_list ')'
   20          | %empty

   21 parameter_list: identifier_list ':' type
   22               | parameter_list ';' identifier_list ':' type

   23 compound_statement: T_BEGIN optional_statements T_END

   24 optional_statements: statement_list
   25                    | %empty

   26 statement_list: statement
   27               | statement_list ';' statement

   28 statement: ID T_ASSIGN expression
   29          | T_WRITE '(' expression_list ')'
   30          | procedure_statement

   31 $@3: %empty

   32 $@4: %empty

   33 $@5: %empty

   34 $@6: %empty

   35 statement: T_IF $@3 expression T_THEN $@4 statement $@5 T_ELSE $@6 statement

   36 $@7: %empty

   37 $@8: %empty

   38 statement: T_WHILE $@7 expression T_DO $@8 statement

   39 procedure_statement: ID
   40                    | ID '(' expression_list ')'

   41 expression_list: expression
   42                | expression_list ',' expression

   43 expression: expression '+' expression
   44           | expression '-' expression
   45           | expression T_MULOP expression
   46           | '-' expression
   47           | '(' expression ')'
   48           | ID '(' expression_list ')'
   49           | ID
   50           | NUM
   51           | expression T_RELOP expression
   52           | T_NOT expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 19 29 40 47 48
    ')' (41) 4 19 29 40 47 48
    '+' (43) 43
    ',' (44) 6 8 42
    '-' (45) 44 46
    '.' (46) 4
    ':' (58) 9 18 21 22
    ';' (59) 4 9 14 17 18 22 27
    error (256)
    T_PROGRAM (258) 4
    T_VAR (259) 9
    T_BEGIN (260) 23
    T_END (261) 23
    T_WRITE (262) 29
    T_ASSIGN (263) 28
    T_PROCEDURE (264) 17
    T_FUNCTION (265) 18
    T_IF (266) 35
    T_THEN (267) 35
    T_ELSE (268) 35
    T_RELOP <relop> (269) 51
    T_WHILE (270) 38
    T_DO (271) 38
    T_NOT (272) 52
    T_INTEGER <variable_type> (273) 12
    T_REAL <variable_type> (274) 13
    T_MULOP <operation> (275) 45
    ID <index> (276) 4 5 6 7 8 17 18 28 39 40 48 49
    NUM <index> (277) 50


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    standard_type <variable_type> (32)
        on left: 12 13
        on right: 11 18
    type <variable_type> (33)
        on left: 11
        on right: 9 21 22
    identifier_list <index> (34)
        on left: 7 8
        on right: 8 9 21 22
    expression <index> (35)
        on left: 43 44 45 46 47 48 49 50 51 52
        on right: 28 35 38 41 42 43 44 45 46 47 51 52
    statement <index> (36)
        on left: 28 29 30 35 38
        on right: 26 27 35 38
    procedure_statement <index> (37)
        on left: 39 40
        on right: 30
    expression_list <index> (38)
        on left: 41 42
        on right: 29 40 42 48
    start (39)
        on left: 1
        on right: 0
    program (40)
        on left: 4
        on right: 1
    $@1 (41)
        on left: 2
        on right: 4
    $@2 (42)
        on left: 3
        on right: 4
    program_identifier_list (43)
        on left: 5 6
        on right: 4 6
    declarations (44)
        on left: 9 10
        on right: 4 9 16
    subprogram_declarations (45)
        on left: 14 15
        on right: 4 14
    subprogram_declaration (46)
        on left: 16
        on right: 14
    subprogram_head (47)
        on left: 17 18
        on right: 16
    arguments (48)
        on left: 19 20
        on right: 17 18
    parameter_list (49)
        on left: 21 22
        on right: 19 22
    compound_statement (50)
        on left: 23
        on right: 4 16
    optional_statements (51)
        on left: 24 25
        on right: 23
    statement_list (52)
        on left: 26 27
        on right: 24 27
    $@3 (53)
        on left: 31
        on right: 35
    $@4 (54)
        on left: 32
        on right: 35
    $@5 (55)
        on left: 33
        on right: 35
    $@6 (56)
        on left: 34
        on right: 35
    $@7 (57)
        on left: 36
        on right: 38
    $@8 (58)
        on left: 37
        on right: 38


State 0

    0 $accept: . start $end

    T_PROGRAM  shift, and go to state 1

    start    go to state 2
    program  go to state 3


State 1

    4 program: T_PROGRAM . ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 4


State 2

    0 $accept: start . $end

    $end  shift, and go to state 5


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    4 program: T_PROGRAM ID . '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    '('  shift, and go to state 6


State 5

    0 $accept: start $end .

    $default  accept


State 6

    4 program: T_PROGRAM ID '(' . program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 7

    program_identifier_list  go to state 8


State 7

    5 program_identifier_list: ID .

    $default  reduce using rule 5 (program_identifier_list)


State 8

    4 program: T_PROGRAM ID '(' program_identifier_list . ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'
    6 program_identifier_list: program_identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    4 program: T_PROGRAM ID '(' program_identifier_list ')' . ';' declarations $@1 subprogram_declarations $@2 compound_statement '.'

    ';'  shift, and go to state 11


State 10

    6 program_identifier_list: program_identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' . declarations $@1 subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 10 (declarations)

    declarations  go to state 13


State 12

    6 program_identifier_list: program_identifier_list ',' ID .

    $default  reduce using rule 6 (program_identifier_list)


State 13

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations . $@1 subprogram_declarations $@2 compound_statement '.'
    9 declarations: declarations . T_VAR identifier_list ':' type ';'

    T_VAR  shift, and go to state 14

    $default  reduce using rule 2 ($@1)

    $@1  go to state 15


State 14

    9 declarations: declarations T_VAR . identifier_list ':' type ';'

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 15

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 . subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 18


State 16

    7 identifier_list: ID .

    $default  reduce using rule 7 (identifier_list)


State 17

    8 identifier_list: identifier_list . ',' ID
    9 declarations: declarations T_VAR identifier_list . ':' type ';'

    ','  shift, and go to state 19
    ':'  shift, and go to state 20


State 18

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations . $@2 compound_statement '.'
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    T_PROCEDURE  shift, and go to state 21
    T_FUNCTION   shift, and go to state 22

    $default  reduce using rule 3 ($@2)

    $@2                     go to state 23
    subprogram_declaration  go to state 24
    subprogram_head         go to state 25


State 19

    8 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 26


State 20

    9 declarations: declarations T_VAR identifier_list ':' . type ';'

    T_INTEGER  shift, and go to state 27
    T_REAL     shift, and go to state 28

    standard_type  go to state 29
    type           go to state 30


State 21

   17 subprogram_head: T_PROCEDURE . ID arguments ';'

    ID  shift, and go to state 31


State 22

   18 subprogram_head: T_FUNCTION . ID arguments ':' standard_type ';'

    ID  shift, and go to state 32


State 23

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 . compound_statement '.'

    T_BEGIN  shift, and go to state 33

    compound_statement  go to state 34


State 24

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 35


State 25

   16 subprogram_declaration: subprogram_head . declarations compound_statement

    $default  reduce using rule 10 (declarations)

    declarations  go to state 36


State 26

    8 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 8 (identifier_list)


State 27

   12 standard_type: T_INTEGER .

    $default  reduce using rule 12 (standard_type)


State 28

   13 standard_type: T_REAL .

    $default  reduce using rule 13 (standard_type)


State 29

   11 type: standard_type .

    $default  reduce using rule 11 (type)


State 30

    9 declarations: declarations T_VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 37


State 31

   17 subprogram_head: T_PROCEDURE ID . arguments ';'

    '('  shift, and go to state 38

    $default  reduce using rule 20 (arguments)

    arguments  go to state 39


State 32

   18 subprogram_head: T_FUNCTION ID . arguments ':' standard_type ';'

    '('  shift, and go to state 38

    $default  reduce using rule 20 (arguments)

    arguments  go to state 40


State 33

   23 compound_statement: T_BEGIN . optional_statements T_END

    T_WRITE  shift, and go to state 41
    T_IF     shift, and go to state 42
    T_WHILE  shift, and go to state 43
    ID       shift, and go to state 44

    $default  reduce using rule 25 (optional_statements)

    statement            go to state 45
    procedure_statement  go to state 46
    optional_statements  go to state 47
    statement_list       go to state 48


State 34

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement . '.'

    '.'  shift, and go to state 49


State 35

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 14 (subprogram_declarations)


State 36

    9 declarations: declarations . T_VAR identifier_list ':' type ';'
   16 subprogram_declaration: subprogram_head declarations . compound_statement

    T_VAR    shift, and go to state 14
    T_BEGIN  shift, and go to state 33

    compound_statement  go to state 50


State 37

    9 declarations: declarations T_VAR identifier_list ':' type ';' .

    $default  reduce using rule 9 (declarations)


State 38

   19 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 52


State 39

   17 subprogram_head: T_PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 53


State 40

   18 subprogram_head: T_FUNCTION ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 54


State 41

   29 statement: T_WRITE . '(' expression_list ')'

    '('  shift, and go to state 55


State 42

   35 statement: T_IF . $@3 expression T_THEN $@4 statement $@5 T_ELSE $@6 statement

    $default  reduce using rule 31 ($@3)

    $@3  go to state 56


State 43

   38 statement: T_WHILE . $@7 expression T_DO $@8 statement

    $default  reduce using rule 36 ($@7)

    $@7  go to state 57


State 44

   28 statement: ID . T_ASSIGN expression
   39 procedure_statement: ID .
   40                    | ID . '(' expression_list ')'

    T_ASSIGN  shift, and go to state 58
    '('       shift, and go to state 59

    $default  reduce using rule 39 (procedure_statement)


State 45

   26 statement_list: statement .

    $default  reduce using rule 26 (statement_list)


State 46

   30 statement: procedure_statement .

    $default  reduce using rule 30 (statement)


State 47

   23 compound_statement: T_BEGIN optional_statements . T_END

    T_END  shift, and go to state 60


State 48

   24 optional_statements: statement_list .
   27 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 61

    $default  reduce using rule 24 (optional_statements)


State 49

    4 program: T_PROGRAM ID '(' program_identifier_list ')' ';' declarations $@1 subprogram_declarations $@2 compound_statement '.' .

    $default  reduce using rule 4 (program)


State 50

   16 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 16 (subprogram_declaration)


State 51

    8 identifier_list: identifier_list . ',' ID
   21 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 62


State 52

   19 arguments: '(' parameter_list . ')'
   22 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 63
    ';'  shift, and go to state 64


State 53

   17 subprogram_head: T_PROCEDURE ID arguments ';' .

    $default  reduce using rule 17 (subprogram_head)


State 54

   18 subprogram_head: T_FUNCTION ID arguments ':' . standard_type ';'

    T_INTEGER  shift, and go to state 27
    T_REAL     shift, and go to state 28

    standard_type  go to state 65


State 55

   29 statement: T_WRITE '(' . expression_list ')'

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression       go to state 71
    expression_list  go to state 72


State 56

   35 statement: T_IF $@3 . expression T_THEN $@4 statement $@5 T_ELSE $@6 statement

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 73


State 57

   38 statement: T_WHILE $@7 . expression T_DO $@8 statement

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 74


State 58

   28 statement: ID T_ASSIGN . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 75


State 59

   40 procedure_statement: ID '(' . expression_list ')'

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression       go to state 71
    expression_list  go to state 76


State 60

   23 compound_statement: T_BEGIN optional_statements T_END .

    $default  reduce using rule 23 (compound_statement)


State 61

   27 statement_list: statement_list ';' . statement

    T_WRITE  shift, and go to state 41
    T_IF     shift, and go to state 42
    T_WHILE  shift, and go to state 43
    ID       shift, and go to state 44

    statement            go to state 77
    procedure_statement  go to state 46


State 62

   21 parameter_list: identifier_list ':' . type

    T_INTEGER  shift, and go to state 27
    T_REAL     shift, and go to state 28

    standard_type  go to state 29
    type           go to state 78


State 63

   19 arguments: '(' parameter_list ')' .

    $default  reduce using rule 19 (arguments)


State 64

   22 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 16

    identifier_list  go to state 79


State 65

   18 subprogram_head: T_FUNCTION ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 80


State 66

   52 expression: T_NOT . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 81


State 67

   48 expression: ID . '(' expression_list ')'
   49           | ID .

    '('  shift, and go to state 82

    $default  reduce using rule 49 (expression)


State 68

   50 expression: NUM .

    $default  reduce using rule 50 (expression)


State 69

   46 expression: '-' . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 83


State 70

   47 expression: '(' . expression ')'

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 84


State 71

   41 expression_list: expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88

    $default  reduce using rule 41 (expression_list)


State 72

   29 statement: T_WRITE '(' expression_list . ')'
   42 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 89
    ','  shift, and go to state 90


State 73

   35 statement: T_IF $@3 expression . T_THEN $@4 statement $@5 T_ELSE $@6 statement
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_THEN   shift, and go to state 91
    T_RELOP  shift, and go to state 85
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88


State 74

   38 statement: T_WHILE $@7 expression . T_DO $@8 statement
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    T_DO     shift, and go to state 92
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88


State 75

   28 statement: ID T_ASSIGN expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88

    $default  reduce using rule 28 (statement)


State 76

   40 procedure_statement: ID '(' expression_list . ')'
   42 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 93
    ','  shift, and go to state 90


State 77

   27 statement_list: statement_list ';' statement .

    $default  reduce using rule 27 (statement_list)


State 78

   21 parameter_list: identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 79

    8 identifier_list: identifier_list . ',' ID
   22 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 19
    ':'  shift, and go to state 94


State 80

   18 subprogram_head: T_FUNCTION ID arguments ':' standard_type ';' .

    $default  reduce using rule 18 (subprogram_head)


State 81

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression
   52           | T_NOT expression .

    $default  reduce using rule 52 (expression)


State 82

   48 expression: ID '(' . expression_list ')'

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression       go to state 71
    expression_list  go to state 95


State 83

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   46           | '-' expression .
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85

    $default  reduce using rule 46 (expression)


State 84

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   47           | '(' expression . ')'
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    ')'      shift, and go to state 96


State 85

   51 expression: expression T_RELOP . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 97


State 86

   45 expression: expression T_MULOP . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 98


State 87

   43 expression: expression '+' . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 99


State 88

   44 expression: expression '-' . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 100


State 89

   29 statement: T_WRITE '(' expression_list ')' .

    $default  reduce using rule 29 (statement)


State 90

   42 expression_list: expression_list ',' . expression

    T_NOT  shift, and go to state 66
    ID     shift, and go to state 67
    NUM    shift, and go to state 68
    '-'    shift, and go to state 69
    '('    shift, and go to state 70

    expression  go to state 101


State 91

   35 statement: T_IF $@3 expression T_THEN . $@4 statement $@5 T_ELSE $@6 statement

    $default  reduce using rule 32 ($@4)

    $@4  go to state 102


State 92

   38 statement: T_WHILE $@7 expression T_DO . $@8 statement

    $default  reduce using rule 37 ($@8)

    $@8  go to state 103


State 93

   40 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 40 (procedure_statement)


State 94

   22 parameter_list: parameter_list ';' identifier_list ':' . type

    T_INTEGER  shift, and go to state 27
    T_REAL     shift, and go to state 28

    standard_type  go to state 29
    type           go to state 104


State 95

   42 expression_list: expression_list . ',' expression
   48 expression: ID '(' expression_list . ')'

    ')'  shift, and go to state 105
    ','  shift, and go to state 90


State 96

   47 expression: '(' expression ')' .

    $default  reduce using rule 47 (expression)


State 97

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression
   51           | expression T_RELOP expression .

    $default  reduce using rule 51 (expression)


State 98

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   45           | expression T_MULOP expression .
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88

    $default  reduce using rule 45 (expression)


State 99

   43 expression: expression . '+' expression
   43           | expression '+' expression .
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85

    $default  reduce using rule 43 (expression)


State 100

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   44           | expression '-' expression .
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85

    $default  reduce using rule 44 (expression)


State 101

   42 expression_list: expression_list ',' expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . T_MULOP expression
   51           | expression . T_RELOP expression

    T_RELOP  shift, and go to state 85
    T_MULOP  shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88

    $default  reduce using rule 42 (expression_list)


State 102

   35 statement: T_IF $@3 expression T_THEN $@4 . statement $@5 T_ELSE $@6 statement

    T_WRITE  shift, and go to state 41
    T_IF     shift, and go to state 42
    T_WHILE  shift, and go to state 43
    ID       shift, and go to state 44

    statement            go to state 106
    procedure_statement  go to state 46


State 103

   38 statement: T_WHILE $@7 expression T_DO $@8 . statement

    T_WRITE  shift, and go to state 41
    T_IF     shift, and go to state 42
    T_WHILE  shift, and go to state 43
    ID       shift, and go to state 44

    statement            go to state 107
    procedure_statement  go to state 46


State 104

   22 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 22 (parameter_list)


State 105

   48 expression: ID '(' expression_list ')' .

    $default  reduce using rule 48 (expression)


State 106

   35 statement: T_IF $@3 expression T_THEN $@4 statement . $@5 T_ELSE $@6 statement

    $default  reduce using rule 33 ($@5)

    $@5  go to state 108


State 107

   38 statement: T_WHILE $@7 expression T_DO $@8 statement .

    $default  reduce using rule 38 (statement)


State 108

   35 statement: T_IF $@3 expression T_THEN $@4 statement $@5 . T_ELSE $@6 statement

    T_ELSE  shift, and go to state 109


State 109

   35 statement: T_IF $@3 expression T_THEN $@4 statement $@5 T_ELSE . $@6 statement

    $default  reduce using rule 34 ($@6)

    $@6  go to state 110


State 110

   35 statement: T_IF $@3 expression T_THEN $@4 statement $@5 T_ELSE $@6 . statement

    T_WRITE  shift, and go to state 41
    T_IF     shift, and go to state 42
    T_WHILE  shift, and go to state 43
    ID       shift, and go to state 44

    statement            go to state 111
    procedure_statement  go to state 46


State 111

   35 statement: T_IF $@3 expression T_THEN $@4 statement $@5 T_ELSE $@6 statement .

    $default  reduce using rule 35 (statement)
